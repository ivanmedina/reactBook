{"version":3,"sources":["components/logo.svg","components/signup.js","components/home.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoadLogin","props","LoadSignup","acceso","className","src","logo","alt","name","type","onChange","saveText","value","onClick","e","sendSign","href","loadLogin","signup","state","loading","success","message","names","surnames","username","email","password","confirm","clicked","handleSignupClick","bind","ChangeHandler","sendSignup","itsCreated","event","preventDefault","this","setState","formData","FormData","append","fetch","method","headers","mode","Connection","body","then","response","json","res","console","log","alert","catch","error","target","Component","EmptyP","Post","key","post","posted","Posts","data","dat","length","map","p","id","LoadHome","clickLogout","rows","cols","handlerArea","handlerPost","handlerClear","datas","home","access","userState","posts","logoutB","handlerClearClick","handlerPostClick","postChangeHandler","handleLogoutClick","getPosts","x","document","getElementsByName","JSON","stringify","text","LoadSign","theAccess","sendLog","loadSign","login","sendLogin","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73a19345.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './login.css';\nimport logo from './logo.svg';\nimport Login,{login} from './login';\n\n\nfunction LoadLogin(props){\n    return (\n  \n        <Login/>\n        \n        );    \n}\n\nfunction LoadSignup(props){\n\n    if(props.acceso){\n      return(<loadLogin/>);\n    }\n    else{\n\n      return(\n  \n          <div className=\"signup\">\n          <div className=\"signup-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h2>SIGN IN</h2>    \n          </div>\n          <div className=\"signup-body\">\n          <form name=\"form2\">\n            <label>Name</label>\n            <input type=\"text\" name=\"names\" onChange={props.saveText}/>\n          <br/>\n          <label>Surnames</label>\n          <input type=\"text\" name=\"surnames\"onChange={props.saveText} />\n        <br/>\n        <label>Username</label>\n          <input type=\"text\" name=\"username\" onChange={props.saveText}/>\n        <br/>\n        <label>Email</label>\n          <input type=\"text\" name=\"email\" onChange={props.saveText}/>\n        <br/>\n        <label>Password</label>\n        <input type=\"password\" name=\"password\" onChange={props.saveText}/>\n        <br/>\n        <label>Confirm Password</label>\n        <input type=\"password\" name=\"confirm\" onChange={props.saveText}/>\n        <br/>\n            <input type=\"submit\" value=\"Submit\" onClick={e => props.sendSign(e)}/>\n        </form>\n        </div>\n        <div className=\"signup-footer\">\n           <a href=\"#\" onClick={props.loadLogin}>\n              Cancel\n            </a>\n        </div>\n      </div>\n  \n      );\n\n\n    }\n\n\n\n\n}\n\n\nclass signup extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            loading:false,\n            success:false,\n            message:'',\n            names:\"\",\n            surnames:\"\",\n            username:\"\",\n            email:\"\",\n            password:\"\",\n            confirm:\"\",\n            clicked:true,\n        }\n        this.handleSignupClick= this.handleSignupClick.bind(this);  \n        this.ChangeHandler=this.ChangeHandler.bind(this);\n        this.sendSignup=this.sendSignup.bind(this);\n        this.itsCreated=this.itsCreated.bind(this);\n    }\n\n    itsCreated(){\n\n\n\n    }\n\n    sendSignup(event){\n\n  \n      event.preventDefault();\n      this.setState({loading:true})    \n      let formData = new FormData();\n      formData.append('names', this.state.names)\n      formData.append('surnames', this.state.surnames)\n      formData.append('username', this.state.username)\n      formData.append('email', this.state.email)\n      formData.append('password', this.state.password)\n      formData.append('confirm', this.state.confirm)\n\n       // var url = 'http://php_p1:4500/signup.php'; \n       // var url = 'http://192.168.208.5:4500/signup.php'; \n      // var url = 'http://172.19.0.3:4500/signup.php';\n      var url = '/signup.php';\n\n\n      fetch(url, {   \n\n        method: 'POST',\n        headers: \n        {\n            'Access-Control-Allow-Origin': '*',\n            'Accept': 'application/json',//'text/plain',\n            'Connection': 'keep-alive',\n            'Origin':'localhost',\n        },\n        mode:'cors',\n        Connection:'keep',\n        body:formData,     \n\n    })\n    .then(response => response.json()\n    .then(res=>{\n\n      this.setState({success:res.success});\n      this.setState({message:res.message});\n      this.setState({loading:false})\n      console.log(this.state);\n      alert(this.state.message);\n\n     }))\n     .catch(error => {\n        var res={success: \"false\", message: \"Error in fetch\"};\n        this.setState({success:res.success});\n        this.setState({message:res.message});\n        this.setState({loading:false})       \n        console.log(res);\n        alert(this.state.message);\n\n    });\n\n\n\n\n  };\n\n  \n\n    handleSignupClick() {\n        this.setState(state => ({\n          clicked: !state.clicked\n        }));\n      }\n\n\n    ChangeHandler(event){\n        \n      this.setState({\n      [event.target.name]:event.target.value\n      })\n  \n  \n    }\n\n\n  render(){\n\n    if(this.state.success){\n      return(\n      <LoadLogin/>\n      )\n    }\n\n    else{\n\n      return (\n  \n        <div>\n            {this.state.clicked ?\n              \n\n                <LoadSignup loadLogin={this.handleSignupClick} saveText={this.ChangeHandler} sendSign={this.sendSignup} \n                acceso={this.state.success}/>:\n\n              \n            \n              <LoadLogin/>}    \n        </div>\n      \n\n    );\n\n    }\n\n\n    }\n    \n  \n}\n\nexport default signup;\n\n// this.state.access?\n              \n","import React, { Component, StyleSheet } from 'react';\nimport './home.css';\nimport logo from './logo.svg';\nimport Login,{login} from './login';\n\n\nfunction LoadLogin(props){\n    return (\n  \n        <Login/>\n        \n        );    \n}\n\n\n\nfunction EmptyP(props){\n\n\n    return(\n\n        <div className=\"posts-empty\"> \n            <p>NO HAY POSTS</p>\n        </div>\n\n\n    );\n\n}\n\nfunction Post(props){\n    \n\n    return(\n        \n        <div className=\"post\" key={props.post.key}>\n            <div className='post-user'>{props.post.username}</div>\n            <div className='post-date'>{props.post.posted}</div>\n            <div className='post-post'>{props.post.post}</div>\n        </div>\n\n    );\n}\n\n\nfunction Posts(props){\n\n\n    // var url = 'http://localhost:4500/posts.php';\n\n\n    const data=props.dat;\n\n    \n    if(data==void(0) || data.length<1)\n    {\n        return (\n            <div className=\"div-post-div\">\n                <EmptyP/>\n            </div>            \n        );\n    }\n\n    \n    \n    return(    \n        \n        <div className=\"post-div\">\n        {data.map(p => <Post post={p} key={p.id}/>)}\n        \n        </div>\n        \n\n\n    );\n}\n\nfunction LoadHome(props){\n\n    return(\n        <div className=\"home\">\n        <div className=\"home-header\">\n          <h2>ReactBook</h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />   \n\n        </div>\n        <div className=\"home-body\">\n            <div className=\"home-body-header\"> \n                <div><a href='#' onClick={e => props.clickLogout(e)}>Log out</a></div> \n\n           </div>\n            <div className=\"home-body-newpost\"> \n                <div className=\"newpost\">           \n                        <textarea  rows=\"6\" cols=\"30\" className=\"newpost-area\" name=\"postArea\" onChange={e=>props.handlerArea(e)}/>\n                        <div className=\"newpost-options\">\n                            <div><button type=\"button\" name=\"postB\"  onClick={e=>props.handlerPost(e)}>Post</button ></div> \n                            <div><button type=\"button\" name=\"clearB\" onClick={e=>props.handlerClear(e)}>Clear</button></div>                    \n                        </div>\n                </div> \n            </div>\n\n                <Posts dat={props.datas}/>\n\n\n        </div>\n        <div className=\"home-footer\">\n\n        </div>\n      </div>\n);\n\n}\n\n\n\n\n\n\n\nexport default class home extends Component {\n  \n\n    constructor(props){\n        super(props);\n        this.state={\n          \n          loading:false,\n          access:'denied',\n          post:'',\n          username:props.userState,\n          posts:[],      \n          clicked:true,\n          logoutB:false,\n          \n        }\n        this.handlerClearClick= this.handlerClearClick.bind(this);\n        this.handlerPostClick=this.handlerPostClick.bind(this);\n        this.postChangeHandler=this.postChangeHandler.bind(this);\n        this.handleLogoutClick= this.handleLogoutClick.bind(this);\n\n      }\n   \n      componentDidMount(){\n          this.getPosts();\n      }\n\n    handleLogoutClick() {\n  \n    this.setState(state => ({\n\n        logoutB: !this.state.logoutB\n    }));\n\n    }\n   \n   \n    async getPosts(){\n\n        var url = '/posts.php';\n        this.setState({loading:true})    \n    \n    \n        await fetch(url, {   \n    \n            method: 'POST',\n            headers: \n            {\n                'Access-Control-Allow-Origin': '*',\n                'Accept': 'application/json',//'text/plain',\n                'Connection': 'keep-alive',\n                'Origin':'localhost',\n            },\n            mode:'cors',\n            Connection:'keep',\n\n    \n        })\n        .then(response => response.json()\n        .then(res=>{\n    \n\n              this.setState({posts:res});     \n              console.log(this.state.posts);  \n              this.setState({loading:false});\n\n      \n         }))\n         .catch(error => {\n          var res={};\n          this.setState({posts:null});     \n\n          this.setState({loading:false})    \n        });\n\n    }\n\n    postChangeHandler(event){\n  \n        // this.setState({\n        //   [event.target.name]:event.target.value\n        // })\n        const x=document.getElementsByName(\"postArea\")[0].value;\n        this.setState(state => ({\n    \n            post:x,\n\n  \n        }));\n\n        // console.log(this.state.post);\n     \n    }\n\n    \n    async handlerPostClick(e) {\n\n\n\n  \n        this.setState(state => ({\n    \n          loading:true,\n\n        }));\n\n\n        var url = '/post.php';          \n        await fetch(url, {   \n    \n            method: 'POST',\n            headers: \n            {\n                'Access-Control-Allow-Origin': '*',\n                'Accept': 'application/json',\n                'Content-Type' : 'application/json',\n                'Connection': 'keep-alive',\n                'Origin':'localhost'\n\n            },\n            mode:'cors',\n            Connection:'keep',\n            body: JSON.stringify({ username: this.state.username, //pasar user desde login\n                post: this.state.post}),\n        \n    \n        })\n        .then(response => response.text()\n        .then(res=>{\n    \n\n            console.log(res);        \n            this.setState({loading:false})\n            this.getPosts();\n            document.getElementsByName(\"postArea\")[0].value='';\n\n         }))\n         .catch(error => {\n        //   var res={};\n \n        //   this.setState({posts:null});     \n            console.log(error)\n           this.setState({loading:false})   \n        });\n\n    }\n\n\n\n    handlerClearClick(e) {\n\n        this.setState(state => ({\n\n        clicked: !state.clicked\n        \n\n    }));\n        document.getElementsByName(\"postArea\")[0].value='';\n        console.log(this.state.clicked);\n    }\n    \n       \n\n    render(){\n        return (\n            \n            <div>\n            {\n                !this.state.logoutB ? \n                <LoadHome datas={this.state.posts} handlerClear={this.handlerClearClick } \n                handlerPost={this.handlerPostClick} handlerArea={this.postChangeHandler}\n                clickLogout={this.handleLogoutClick}/>\n                :\n                <LoadLogin/>\n\n            }\n            </div>\n            \n\n\n        );\n    }\n\n};\n\n","import React, {Component} from 'react';\nimport './login.css';\nimport logo from './logo.svg';\nimport Signup,{signup} from './signup';\nimport Home from './home';\n\n\nfunction LoadSign(props){\n\n\n  return (\n  \n    <Signup/>\n    \n    );\n}\n\n\n\n\nfunction LoadLogin(props){\n\n\n  if(props.theAccess!='sucessful'){\n    return (      \n\n      <div className=\"login\">\n        <div className=\"login-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>LOGIN</h2>    \n        </div>\n        <div className=\"login-body\">\n          <form>\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" onChange={props.saveText}/>\n          <br/>\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" onChange={props.saveText}/>\n          <br/>\n          <input type=\"submit\" value=\"Submit\" onClick={e => props.sendLog(e)} />\n          </form>\n        </div>\n        <div className=\"login-footer\">\n          <a href=\"#\" onClick={props.loadSign}>\n              Sign up\n          </a>\n        </div>\n\n      </div>\n    );\n\n  }\n  else{\n    return(\n\n      <Home/>\n\n    );\n  }\n\n}\n    \n    \nexport default class login extends Component{\n  \n  constructor(props){\n    super(props);\n    this.state={\n      loading:false,\n      access:'denied',\n      message:'',\n      username:\"\",\n      password:\"\",\n      clicked:true,\n    }\n    this.handleSignupClick= this.handleSignupClick.bind(this);\n    this.ChangeHandler=this.ChangeHandler.bind(this);\n    this.sendLogin=this.sendLogin.bind(this);\n\n  }\n  \n\n\n\n  async sendLogin(event){ //deberia tener await?\n    event.preventDefault();\n    this.setState({loading:true})    \n    let formData = new FormData();\n    formData.append('username', this.state.username)\n    formData.append('password', this.state.password)\n    \n    var url = '/login.php';\n\n    await fetch(url, {   \n\n        method: 'POST',\n        headers: \n        {\n            'Access-Control-Allow-Origin': '*',\n            'Accept': 'application/json',//'text/plain',\n            'Connection': 'keep-alive',\n            'Origin':'localhost',\n        },\n        mode:'cors',\n        Connection:'keep',\n        body:formData,\n        })\n    .then(response => response.json()\n    .then(res=>{\n\n          this.setState({access:res.access});\n          this.setState({message:res.message});\n          this.setState({message:res.message});\n          this.setState({loading:false});\n          alert(this.state.message);\n          console.log(res);\n        }))\n     .catch(error => {\n      var res={access: false, message: error};\n      this.setState({access:res.access});\n      this.setState({username:res.username});\n      this.setState({loading:false});         \n      alert(this.state.message);\n    }); \n\n\n  };\n      \n  handleSignupClick() {\n  \n    this.setState(state => ({\n\n      clicked: !state.clicked\n    }));\n\n  }\n\n  ChangeHandler(event){\n\n    this.setState({\n      [event.target.name]:event.target.value\n    })\n\n\n\n  }\n\n  render(){\n\n    \n  return(\n      <div>\n      {!this.state.clicked ? \n        <LoadSign/>:\n        (this.state.access=='successful'?\n          <div><Home userState={this.state.username} /></div>:\n          <LoadLogin\n          loadSign={this.handleSignupClick}\n          saveText={this.ChangeHandler}\n          sendLog={this.sendLogin}\n          theAccess={this.state.access}\n\n          /> \n        )}\n\n\n\n      \n\n          \n\n\n      </div>\n\n\n  );\n\n  }\n\n  \n}\n\n\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Login, {login} from './components/login';\nimport Home, {home} from './components/home';\n\n\n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      loading:false,\n      access:'denied',\n      message:'',\n      username:\"\",\n      password:\"\",\n      clicked:true,\n\n    }\n  }\n\n\n\n\n  render(){\n\n\n\n    \n    return (\n\n      <div className=\"App\">\n        <header className=\"container\">\n\n            <section className=\"components\">\n\n            <Login/>\n\n\n            </section>\n        </header>\n      </div>\n    );\n\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}